/*
  Rule set for Syft system style number 1 ~ syft_style_1.css .
*/

/*
Uses seperate files for theme, tables, forms, reset
*/

/* Default setting for universal selector   */
*{
  text-decoration: none;
  box-sizing: border-box;

   }

/* Default styling ruleset for standard type selector HTML elements */
html {
  font-family: var(--font);
  line-height: 1.5;
  font-size: 16px;
  color: var(--text-color);
  background-color: var(--background-color);
  accent-color: var(--primary);
  /* Outer to inner is margin - border - padding */
  margin: 4px 4px 4px 4px;
  border: var(--border);
  padding: 2px;

}

body {

  display: grid;
  place-content: center;
  min-height: 100vh;
  font-weight: var(--fw-400);
  color: var(--body-color);
  background-color: hsl(var(--clr-neutral-200));
  line-height: 1.5;
  text-rendering: auto;
}


/* Rules set for header type elements */

 h1, h2, h3, h4, h5 {
  padding: 1rem;
  margin-top: 1rem;
  margin-bottom: 1.5rem;
  color: var(--heading);
  font-family: var(--font-heading), var(--font);
  font-weight: 600;
 }

/* rules set for H1, One per page */
h1 {
  display: inline-flexbox;
  font-size: 3rem;
  font-weight: 700;
  text-align: center;
}

h2 {
  font-size: 2.5rem;
  text-align: left;
  padding-top: 0rem;
  margin-top: 0rem;
  border-top: 0.25rem solid;
}

h3 {
  font-size: 2rem;
  text-align: left;
}

h4 {
  font-size: 1.5rem;
  text-align: left;
}

h5 {
  text-align: left;
  font-size: 1.25rem;
  }

h1:not(:first-child), h2:not(:first-child), h3:not(:first-child) {
    margin-top: 2rem;
}

p {
  color: var(--text-color);
  display: block;
  margin-inline-start: 0px;
  margin-inline-end: 0px;
  line-height: 1.5;
}

/* Default rule set for button type element */
button {
  height: 2rem;
  width: 8rem;
  cursor: pointer;
  font-weight: 500;
  border: none;
  background-color: transparent;
}

/*rule set for links. Seperate rules required for nav links and main links */
a {
  color: var(--link-color);
  cursor: grab;
  text-decoration: none;
  font-size: 22px;
}

a:link, a:visited{
  color: var(--link-color);
   text-decoration: underline;
}

a:hover, a:focus{
  background-color: var(--light-gray);
  color: var(--hover-color);
}

.active{
  background-color: var(--red-gray);
  color:var(--white);
}
/* Add icon  */
a[href^="http"] {
  background: url("external-link-52.png") no-repeat 100% 0;
  background-size: 16px 16px;
  padding-right: 19px;
}

ul {
  list-style: none ;
}

ul li {
  list-style-position: inside;
  list-style-type: none;
  line-height: 1.5
}

ul li::marker {
  color: var(--amethyst);
  font-size: 1.25rem;
}

ol {
    list-style: decimal;
}

/* Style tags */
.tags {
  display: flex;
  flex-wrap: wrap;
  gap: var(--gap);
  list-style: none;
  
}
.tag {
  background-color: var(--red-gray);
  color: var(--text-color);
  border: var(--border);
  border-radius: 10px;
  padding: 0.5rem 1rem;
}


/* first grid container used on index.html format container full width header section, one column aside and four column main */
/* .container {
  display: grid;
  gap: var(--gap);
  grid-template-columns: 2fr 1fr;
   grid-template-columns: repeat(autofit, minmax(300px, 1fr)) 
  grid-template-rows: auto auto auto auto;
  grid-template-areas:
    "header header"
    "main  aside "
    "footer footer";
  border: var(--border);
  border-radius: 10px;
  padding: 10px;
  margin: 10px auto auto 5px;

} */

/* default layout for HTML5 sections*/
/* header {
  grid-area: header;
}

footer {
  grid-area: footer;
  gap: var(--gap);
  grid-template-columns: repeat(auto-fit, minmax(250px, 100%), 3fr);
  background-color: var(--florentine);
  border: var(--border);
  border-radius: 20px;
  padding: 15px;
  margin: 15px auto auto 5px;

}

aside {
  grid-area: aside;
}

main {
  grid-area: main;
}
/* Rule Set for Article containers 
 article { 
  display: grid;
  gap: var(--gap);
  grid-template-columns: repeat(auto-fit, minmax(300px, 100%), 1fr);
  background-color: var(--white-smoke);
  color: black;
  padding: 15px;
  margin: 15px auto;
  border: var(--border);
  border-radius: 10px;
} */

/* Ruleset for article header */
.article_head {
  background-color: var(--blackcut);
  color: var(--lightest-gray);
  border-radius: .8rem;
}

/* Rule set for an aside article header */
.aside_head {
  background-color: var(--sapphire);
  color: var(--inverted-text-color);
  border-radius: .8rem;
}

hr {
  border: none;
  border-top: 3px double var(--blackcut);
  color: #333;
  overflow: visible;
  text-align: center;
  height: 5px;
}

hr::after {
  background: #fff;
  content: 'ยง';
  padding: 0 4px;
  position: relative;
  top: -13px;
}

.font-panel {
  display: inline-block;
  width: 45%;
}

.font-label {
  font-size: 20px;
  text-decoration: underline;
}

.inline_list {
  display: inline-block;
}

.bold {
  font-weight: 700;
}

.italic {
  font-style: italic;
}

/* <uniquifier>: Use a unique and descriptive class name
// <weight>: Use a value from 200 to 900*/
.code {
  font-family: "Source Code Pro" monospace;
  background-color: var(--code-background-color);
  font-weight: 600;
  font-style: normal;
}

.lastdate {
  font-family: "Source Code Pro", monospace;
  font-style: italic;
}
/* color swatchs used on color card for style sheets */
.swatchsilver {
  background-color: var(--silver);
  color: var(--textcolor);
  border: var(--border);
  border-radius: .8rem;
}
.swatchsapphire {
  background-color: var(--sapphire);
  color: var(--textcolor);
   border: var(--border);
  border-radius: .8rem;
}
.swatchamethyst {
  background-color: var(--amethyst);
  color: var(--textcolor);
   border: var(--border);
  border-radius: .8rem;
}
.swatchflorentine {
  background-color: var(--florentine);
  color: var(--textcolor);
   border: var(--border);
  border-radius: .8rem;
}
.swatchmidnightblue {
  background-color: var(--midnight-blue);
  color: var(--textcolor);
   border: var(--border);
  border-radius: .8rem;
}
.swatchbluenile {
  background-color: var(--blue-nile);
  color: var(--textcolor);
   border: var(--border);
  border-radius: .8rem;
}
.swatchblackcut {
  background-color: var(--blackcut);
  color: var(--white);
   border: var(--border);
  border-radius: .8rem;
}
.swatchgreen {
  background-color: var(--green);
  color: var(--textcolor);
  border: var(--border);
  border-radius: .8rem;
}
.swatchmauve {
  background-color: var(--mauve);
  color: var(--textcolor);
  border: var(--border);
  border-radius: .8rem;
}

/* Rule set for button style for flat style buttons xxxxjc need to change colors */
.flat {
  background-color: var(--silver);
  color: var(--textcolor);
  border: var(--border);
  border-radius: .8rem;
}

.flat:hover {
  background-color: #782b90;
  transition: background-color .15s, font-size .15s;
  font-size: 18px;
}

.flat:active {
  border-color: #fff;
}


.title {
  color: grey;
  font-size: 18px;
}
/*
button {
  border: none;
  outline: 0;
  display: inline-block;
  padding: 8px;
  color: white;
  background-color: #000;
  text-align: center;
  cursor: pointer;
  width: 100%;
  font-size: 18px;
}*/


/* code for grids lesson from KEvin Pwell  */


/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}



/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role="list"],
ol[role="list"] {
  list-style: none;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}



/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }

  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
/* Set core body defaults */


h1,
h2,
h3 {
  font-weight: var(--fw-700);
}

/* utilities */
.flex {
  display: flex;
  gap: var(--gap, 1rem);
}

.flow > *:where(:not(:first-child)) {
  margin-top: var(--flow-spacer, 1em);
}
/* color scheme for card one */
.sw-bg-101 {
  background: hsl(var(--sw-bg-100));
}
.sw-txt-101 {
  color: var(--sw-txt-100);
}
.sw-hdr-101 {
  color: var(--sw-head-100);
}
.sw-sub-101 {
  color: hsl(var(--sw-sub-100));
}

/* color scheme for card two */
.sw-bg-102 {
  background: var(--sw-bg-101);
}
.sw-txt-102 {
  color: var(--sw-txt-101);
}
.sw-hdr-102 {
  color: hsl(var(--sw-head-101));
}
.sw-sub-102 {
  color: hsl(var(--sw-sub-101));
}


/* color scheme for card three */
.sw-bg-103 {
  background: var(--sw-bg-102);
}
.sw-txt-103 {
  color: var(--sw-txt-102);
}
.sw-hdr-103 {
  color: var(--sw-head-102);
}
.sw-sub-103 {
  color: var(--sw-sub-102);
}

/* color scheme for card four */
.sw-bg-104 {
  background: var(--sw-bg-103);
}
.sw-txt-104 {
  color: var(--sw-txt-103);
}
.sw-hdr-104 {
  color: var(--sw-head-103);
}
.sw-sub-104 {
  color: var(--sw-sub-103);
}

/* color scheme for card five */
.sw-bg-105 {
  background: var(--sw-bg-104);
}
.sw-txt-105 {
  color: var(--sw-txt-104);
}
.sw-hdr-105 {
  color: var(--sw-head-104);
}
.sw-sub-105 {
  color: var(--sw-sub-104);
}
.bg-primary-400 {
  background: hsl(var(--clr-primary-400));
}
.bg-secondary-400 {
  background: hsl(var(--clr-secondary-400));
}
.bg-secondary-500 {
  background: hsl(var(--clr-secondary-500));
}

.bg-neutral-100 {
  background: hsl(var(--clr-neutral-100));
}

.text-neutral-100 {
  color: hsl(var(--clr-neutral-100));
}
.text-secondary-400 {
  color: hsl(var(--clr-secondary-400));
}
.border-primary-400 {
  border: 2px solid #a775f1;
}

/* components */
.reference-grid {
  display: grid;
  gap: 1.5rem;
  grid-auto-columns: 1fr;
  grid-template-areas:
   'one'
   'two'
   'three'
   'four'
   'five';
  padding-block: 2rem;
  width: min(95%, 70rem);
  margin-inline: auto;
}

.reference {
  font-size: var(--fs-400);
  padding: 2rem;
  border-radius: 0.5rem;
  box-shadow: 2.5rem 3.75rem 3rem -3rem hsl(var(--clr-secondary-400) / 0.25);
}

.reference:nth-child(1) {
  grid-area: one;
}
.reference:nth-child(2) {
  grid-area: two;
}
.reference:nth-child(3) {
  grid-area: three;
}
.reference:nth-child(4) {
  grid-area: four;
}
.reference:nth-child(5) {
  grid-area: five;
}

@media screen and (min-width: 33em) {
  .reference-grid {
      grid-template-areas:
      "one one"
      "two three"
      "five five"
      "four four";
  }
}

@media screen and (min-width: 38em) {
  .reference-grid {
    grid-template-areas:
     'one one'
     'two five'
     'three five'
     'four four';
  }
}

@media screen and (min-width: 54em) {
  .reference-grid {
      grid-template-areas:
      "one one two"
      "five five five"
      "three four four";
  }
}

@media screen and (min-width: 75em) {
  .reference-grid {
      grid-template-areas:
      "one one two five"
      "three four four five";
  }
}


.reference.quote {
  background-image: url("./images/bg-pattern-quotation.svg");
  background-repeat: no-repeat;
  background-position: top right 10%;
}

.reference img {
  width: 1.75rem;
  aspect-ratio: 1;
  border-radius: 50%;
}

.reference .picture {
  width: 300px;
  height: 300px;
}

.reference .name {
  font-size: var(--fs-400);
  font-weight: var(--fw-400);
  line-height: 1;
}

.reference .position {
  font-size: var(--fs-300);
  opacity: 0.5;
}

/* .reference > p:first-of-type {
  font-size: var(--fs-500);
  line-height: 1.2;
}

.reference > p:last-of-type {
  opacity: 0.7;
} */